server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    gateway:
      httpclient:
        connect-timeout: 5000
        response-timeout: 5s
        pool: # refer reactor netty doc
          type: elastic
          max-idle-time: 5s # idle time after which the communication channel will be closed
          max-life-time: 60s # time after which communication channel will be closed
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR # retries only when 5XXX errors
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException # retries only when the given exceptions thrown
            backoff:
              firstBackOff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
          predicates:
            - Path=/books/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward://catalog-fallback
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
  redis: # using Redis to back the RequestRateLimiter
    connect-timeout: 7s
    host: localhost
    port: 6379
    timeout: 1s


resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20 # the size of the sliding window used to record the outcome of call when circuit breaker close
        permittedNumberOfCallsInHalfOpenState: 5 # number of permitted call when the circuit is half-open
        failureRateThreshold: 50
        waitDurationInOpenState: 15 # waiting time before moving from open to half-open
  timelimiter:
    configs:
      default:
        timeout-duration: 5s
logging:
  level:
    io.github.resilience4j: DEBUG
